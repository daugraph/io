name: GitHub CI

on:
  push:
    branches:
      - master
      - R0.17
  pull_request:
    branches:
      - master
      - R0.17

env:
  BAZEL_OPTIMIZATION: --copt=-msse4.2 --copt=-mavx --compilation_mode=opt

jobs:
  linux-bazel:
    name: Bazel Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bazel on Linux
        run: |
          set -x -e
          bash -x -e .github/workflows/build.space.sh
          BAZEL_OS=$(uname | tr '[:upper:]' '[:lower:]')
          BAZEL_VERSION=$(cat .bazelversion)
          docker run -i --rm -v $PWD:/v -w /v --net=host \
            -e BAZEL_VERSION=${BAZEL_VERSION} \
            -e BAZEL_OPTIMIZATION="${BAZEL_OPTIMIZATION}" \
            gcr.io/tensorflow-testing/nosla-ubuntu16.04-manylinux2010@sha256:3a9b4820021801b1fa7d0592c1738483ac7abc209fc6ee8c9ef06cf2eab2d170 /v/.github/workflows/build.bazel.sh
          sudo chown -R $(id -nu):$(id -ng) .
          sudo find build/tensorflow_io -name '*runfiles*' | sudo xargs rm -rf
          sudo cp .bazelrc build/tensorflow_io/
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-bazel-bin
          path: build/tensorflow_io

  linux-wheel:
    name: Wheel ${{ matrix.python }} Linux
    needs: linux-bazel
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.6']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: ${{ runner.os }}-bazel-bin
          path: bazel-bin/tensorflow_io
      - name: Wheel ${{ matrix.python }} Linux
        run: |
          set -x -e
          mv bazel-bin/tensorflow_io/.bazelrc .
          docker run -i --rm --user $(id -u):$(id -g) -v /etc/password:/etc/password -v $PWD:/v -w /v --net=host python:${{ matrix.python }}-slim python setup.py --data bazel-bin -q bdist_wheel
          ls dist/*
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-${{ matrix.python }}-wheel
          path: dist 

